---
module: cockroachdb_maintenance
short_description: Perform CockroachDB maintenance operations
description:
  - Perform routine and ad-hoc maintenance operations on a CockroachDB cluster
  - Manage garbage collection, schema changes, node decommissioning, and more
options:
  operation:
    description:
      - Type of maintenance operation to perform
    required: true
    choices:
      - gc
      - schema_cleanup
      - node_status
      - node_decommission
      - zone_config
      - version_upgrade_check
      - cancel_query
      - cancel_session
      - cancel_jobs
      - troubleshoot_query
      - rebalance_data
      - reassign_ranges
    type: str
  database:
    description:
      - Database name to perform operations on
      - Required for some operations
    type: str
  table:
    description:
      - Table name to perform operations on
      - May require schema prefix
      - Required for some operations
    type: str
  node_id:
    description:
      - Node ID for node-specific operations
      - Required for node_decommission operation
    type: int
  ttl:
    description:
      - TTL (time to live) value for GC operations
      - "Format examples: '24h', '7d', '30m'"
    type: str
  query_id:
    description:
      - Query ID for query cancellation
      - Required for cancel_query operation
    type: str
  session_id:
    description:
      - Session ID for session cancellation
      - Required for cancel_session operation
    type: str
  job_id:
    description:
      - Job ID for job cancellation
      - Can be an integer or a list of integers
    type: raw
  job_type:
    description:
      - Job type for job cancellation by type
      - "Example values: 'BACKUP', 'RESTORE', 'IMPORT', 'SCHEMA CHANGE'"
    type: str
  job_status:
    description:
      - Job status for filtering jobs by status
      - "Example values: 'running', 'failed', 'succeeded', 'pending'"
    type: str
  zone_configs:
    description:
      - Zone configuration parameters
      - Used with zone_config operation
    type: dict
    suboptions:
      target:
        description:
          - Target for zone configuration (database, table, index, etc.)
        type: str
      config:
        description:
          - Configuration values to apply
        type: dict
        suboptions:
          num_replicas:
            description:
              - Number of replicas for the range
            type: int
          constraints:
            description:
              - List of constraints for replica placement
            type: list
            elements: dict
          lease_preferences:
            description:
              - List of lease placement preferences
            type: list
            elements: dict
  rebalance_options:
    description:
      - Options for data rebalancing operations
    type: dict
    suboptions:
      dry_run:
        description:
          - Whether to perform a dry run without actual changes
        type: bool
        default: false
      max_moves:
        description:
          - Maximum number of range moves to perform
        type: int
      locality:
        description:
          - Locality to target for rebalance
        type: str
  troubleshoot_options:
    description:
      - Options for query troubleshooting
    type: dict
    suboptions:
      query_text:
        description:
          - Query text to analyze
        type: str
      collect_explain:
        description:
          - Whether to collect EXPLAIN plan
        type: bool
        default: true
      collect_trace:
        description:
          - Whether to collect execution trace
        type: bool
        default: false
      trace_options:
        description:
          - Options for trace collection
        type: dict
  host:
    description:
      - Database host address
    default: localhost
    type: str
  port:
    description:
      - Database port number
    default: 26257
    type: int
  user:
    description:
      - Database username
    default: root
    type: str
  password:
    description:
      - Database user password
    type: str
  ssl_mode:
    description:
      - SSL connection mode
    default: verify-full
    choices: ["disable", "allow", "prefer", "require", "verify-ca", "verify-full"]
    type: str
  ssl_cert:
    description:
      - Path to client certificate file
    type: str
  ssl_key:
    description:
      - Path to client private key file
    type: str
  ssl_rootcert:
    description:
      - Path to CA certificate file
    type: str
  connect_timeout:
    description:
      - Database connection timeout in seconds
    default: 30
    type: int
requirements:
  - psycopg2
author:
  - "Ryan Punt (@rpunt)"


examples: |
  # Set a custom garbage collection TTL for a table
  - name: Set custom GC TTL for audit_logs table
    cockroachdb_maintenance:
      operation: gc
      database: my_database
      table: audit_logs
      ttl: '7d'



  # Analyze and clean up orphaned schema objects
  - name: Clean up schema objects
    cockroachdb_maintenance:
      operation: schema_cleanup
      database: my_database

  # Check the status of all nodes in a cluster
  - name: Get node status
    cockroachdb_maintenance:
      operation: node_status
    register: node_status_result

  # Decommission a specific node
  - name: Decommission node 3
    cockroachdb_maintenance:
      operation: node_decommission
      node_id: 3

  # Configure zone settings for a database
  - name: Set zone configuration
    cockroachdb_maintenance:
      operation: zone_config
      zone_configs:
        target: DATABASE my_database
        config:
          num_replicas: 5
          constraints:
            - key: region
              value: us-east
              type: required
          lease_preferences:
            - constraints:
              - key: region
                value: us-east

  # Check if the cluster is ready for a version upgrade
  - name: Check version upgrade readiness
    cockroachdb_maintenance:
      operation: version_upgrade_check

  # Cancel a specific long-running query
  - name: Cancel expensive query
    cockroachdb_maintenance:
      operation: cancel_query
      query_id: "16577877708239815937"

  # Cancel specific jobs
  - name: Cancel import job
    cockroachdb_maintenance:
      operation: cancel_jobs
      job_id: 123456

  # Cancel all running IMPORT jobs
  - name: Cancel all import jobs
    cockroachdb_maintenance:
      operation: cancel_jobs
      job_type: "IMPORT"
      job_status: "running"

  # Troubleshoot a slow query
  - name: Analyze slow query
    cockroachdb_maintenance:
      operation: troubleshoot_query
      troubleshoot_options:
        query_text: "SELECT * FROM large_table JOIN other_table ON large_table.id = other_table.id WHERE complex_condition"
        collect_explain: true
        collect_trace: true
        trace_options:
          format: "json"

  # Trigger data rebalancing across nodes
  - name: Rebalance data
    cockroachdb_maintenance:
      operation: rebalance_data
      rebalance_options:
        dry_run: true
        max_moves: 100


return_values:
  changed:
    description: Whether any changes were made
    returned: always
    type: bool
    sample: true
  queries:
    description: List of executed SQL queries
    returned: always
    type: list
    sample: ["ALTER TABLE my_database.audit_logs CONFIGURE ZONE USING gc.ttlseconds = 604800"]
  details:
    description: Detailed information about the operation results
    returned: success
    type: dict
    sample: {
      "gc": {
        "previous_ttl": "25h",
        "current_ttl": "168h"
      }
    }
  nodes:
    description: Information about cluster nodes
    returned: when operation is node_status or node_decommission
    type: list
    sample: [
      {
        "id": 1,
        "address": "localhost:26257",
        "status": "live",
        "is_available": true,
        "metrics": {
          "capacity": 107374182400,
          "available": 75161927680
        }
      }
    ]
  schema_objects:
    description: Results of schema cleanup operations
    returned: when operation is schema_cleanup
    type: dict
    sample: {
      "dropped_tables": 2,
      "dropped_indexes": 5,
      "dropped_views": 1,
      "details": [
        "Dropped orphaned table: temp_import_123",
        "Dropped orphaned view: deprecated_view"
      ]
    }
  jobs:
    description: Information about jobs
    returned: when operation is cancel_jobs
    type: list
    sample: [
      {
        "id": 680035538520555521,
        "type": "SCHEMA CHANGE",
        "status": "canceled",
        "description": "ALTER TABLE public.users ADD COLUMN last_login TIMESTAMP"
      }
    ]
  troubleshooting:
    description: Query troubleshooting results
    returned: when operation is troubleshoot_query
    type: dict
    sample: {
      "explain_plan": "...",
      "execution_trace": "...",
      "bottleneck_analysis": "..."
    }
  rebalance:
    description: Results from data rebalancing operations
    returned: when operation is rebalance_data or reassign_ranges
    type: dict
    sample: {
      "ranges_moved": 42,
      "data_size_moved_bytes": 1073741824,
      "before_distribution": {},
      "after_distribution": {}
    }
